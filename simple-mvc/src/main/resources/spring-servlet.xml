<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--开启注解加载Bean-->
    <context:annotation-config/>
    <!--扫包路径定义-->
    <context:component-scan base-package="com.github.app.web" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--swagger扫包配置-->
    <!--<context:component-scan base-package="springfox" />-->
    <!-- 添加Swagger2的java config作为SpringMVC的bean -->
    <!--<mvc:annotation-driven />-->
    <bean class="com.github.app.util.swagger.SwaggerApiConfig"/>

    <!--swagger相关配置-->
    <!-- 配置Swagger相关静态资源 -->
    <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/" mapping="doc.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>

    <!-- 开启对aspact注解的支持 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean name="requestMappingHandlerAdapter"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter"/>
                <ref bean="simpleStringConverter"/>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--含有泛型的请求参数json转对象-->
    <bean id="genericsJsonResolver" class="com.github.spring.web.handler.argument.WebGenericsParamArgumentResolver"/>
    <!--将泛型注解放到最高优先级解析-->
    <bean class="com.github.spring.web.handler.argument.ConfigFirstGenericsParamArgumentResolver"/>

    <!-- json 配置 -->
    <bean name="fastjsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="serializerFeatures">
            <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                <!-- 输出key时是否使用双引号,默认为true -->
                <value>QuoteFieldNames</value>
                <!--输出值为null的项-->
                <!--<value>WriteMapNullValue</value>-->
                <!--输出值为null的数组为空数组（[]）-->
                <value>WriteNullListAsEmpty</value>
                <!--禁止循环引用转化，防止循环依赖造成死循环-->
                <value>DisableCircularReferenceDetect</value>
            </array>
        </property>
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
        <property name="charset" value="UTF-8"/>
    </bean>
    <!--普通json请求参数和返回参数转化器-->
    <bean id="jsonConverter" class="com.github.spring.web.handler.converter.WebJsonHttpMessageConverter">
        <!--<property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>-->
        <property name="supportedMediaTypes">
            <list>
                <!--application/json请求-->
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig" ref="fastjsonConfig"/>
    </bean>

    <!--配置返回字符串，编码设置为UTF-8-->
    <bean id="simpleStringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!--text/html 请求-->
                <!--<value>text/html;charset=UTF-8</value>-->
                <!--text/plain 请求-->
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!-- IE下如果返回的数据格式为 application/json;charset=UTF-8 会弹出下载框，因此需要更换为text/html;charset=UTF-8-->
                <value>text/html;charset=UTF-8</value>
                <!--application/x-www-form-urlencoded form表单中文转义-->
                <value>application/x-www-form-urlencoded;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--字节数组信息转化器-->
    <!--<bean id="byteArrayConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>-->

    <!--类信息转化器-->
    <!--<bean id="sourceClassConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>-->

    <!--复杂类信息转化器-->
    <!--<bean id="mSourceClassConverter" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"/>-->

    <!--访问日志拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/swagger*/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <!--登录验证拦截器-->
            <bean class="com.github.spring.web.adapter.LogInterceptorAdapter"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--异常拦截器定义-->

    <!--jsp视图路由定义-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>

    <!-- 上传拦截，如最大上传值及最小上传值 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 增加上传大小限制 100M-->
        <property name="maxUploadSize" value="104857600"/>
    </bean>
</beans>
